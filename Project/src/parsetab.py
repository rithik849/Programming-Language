
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALNOT_EQUALleftORleftANDleftNOTleftADDSUBleftMULDIVMODrightPOWrightUSUBADD AND ASSIGNMENT BOOL BOOL_TYPE COL COMMA COMMENT DEF DIV ELSE EQUAL FLOAT FLOAT_TYPE FOR GREATER GREATER_EQUAL IDEN IF INT INT_TYPE LESS LESS_EQUAL L_BRACE L_PAR L_SCOPE MOD MUL NONE_TYPE NOT NOT_EQUAL OR POW PRINT RET R_BRACE R_PAR R_SCOPE STRING STRING_TYPE SUB TO VAL VAR WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    statement : assignment\n    statement : selection\n    statement : print\n    statement : while_loop\n    statement : for_loop\n    statement : func_definition\n    statement : return_statement\n    statement : expression\n    expression : SUB expression %prec USUB\n       expression : NOT expression\n    relation : LESS\n    relation : GREATER\n    relation : LESS_EQUAL\n    relation : GREATER_EQUAL\n    relation : EQUAL\n    relation : NOT_EQUAL\n    expression : expression ADD expression\n       expression : expression SUB expression\n       expression : expression MUL expression\n       expression : expression DIV expression\n       expression : expression MOD expression\n       expression : expression POW expression\n       expression : expression AND expression\n       expression : expression OR expression\n       expression : expression relation expression\n    iden_expression : identifier\n    iden_expression : func_callexpression : iden_expressionexpression : L_PAR expression R_PAR\n    list : L_BRACE argument_list R_BRACEstring : STRINGint : INTfloat : FLOATbool : BOOLexpression : list\n    expression : int\n    expression : bool\n    expression : float\n    expression : string\n    expression : list_indexlist_index : list L_BRACE expression R_BRACE\n    list_index : identifier L_BRACE expression R_BRACE\n    list_index : list_index L_BRACE expression R_BRACE\n    \n    base_type : INT_TYPE\n    base_type : FLOAT_TYPE\n    base_type : BOOL_TYPE\n    base_type : STRING_TYPE\n    type : base_type \n    type : L_BRACE type R_BRACE\n    var_init : VAR identifier COL type\n    \n    val_init : VAL identifier COL type\n    \n    initialize : val_init\n    initialize : var_init\n    \n    identifier : IDEN\n    \n    assign : expression\n    assignment : initialize ASSIGNMENT assign\n    \n    assignment : identifier ASSIGNMENT assign\n    assignment : list_index ASSIGNMENT assign\n    assignment : expression ASSIGNMENT assign\n    \n    selection : IF expression L_SCOPE statements R_SCOPE ELSE L_SCOPE statements R_SCOPE\n    \n    selection : IF expression L_SCOPE statements R_SCOPE\n    \n    while_loop : WHILE expression L_SCOPE statements R_SCOPE\n    \n    for_loop : FOR identifier ASSIGNMENT expression TO expression L_SCOPE statements R_SCOPE\n    \n    print : PRINT L_PAR expression R_PAR\n    print : PRINT L_PAR string R_PAR\n    \n    method_statements : method_statements method_body\n    \n    method_statements : method_body\n    \n    method_body : statement\n    return_statement : RET expressionparameter_list : parameter_list COMMA parameterparameter_list : parameterparameter : identifier COL typeparameter_list : argument_list : argument_list COMMA argumentargument_list : argumentargument : expressionargument : \n    func_definition : DEF identifier L_PAR parameter_list R_PAR COL type L_SCOPE method_statements R_SCOPE\n    func_definition : DEF identifier L_PAR parameter_list R_PAR COL NONE_TYPE L_SCOPE method_statements R_SCOPE\n    func_call : identifier L_PAR argument_list R_PARfunc_call : base_type L_PAR argument_list R_PAR'
    
_lr_action_items = {'IF':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[14,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,14,-31,14,-32,-44,-82,-45,14,-66,-67,14,-43,-83,-63,-64,14,14,14,14,14,14,-62,-65,14,-69,-70,14,-80,-68,-81,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[15,15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,15,-31,15,-32,-44,-82,-45,15,-66,-67,15,-43,-83,-63,-64,15,15,15,15,15,15,-62,-65,15,-69,-70,15,-80,-68,-81,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,18,-31,18,-32,-44,-82,-45,18,-66,-67,18,-43,-83,-63,-64,18,18,18,18,18,18,-62,-65,18,-69,-70,18,-80,-68,-81,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,19,-31,19,-32,-44,-82,-45,19,-66,-67,19,-43,-83,-63,-64,19,19,19,19,19,19,-62,-65,19,-69,-70,19,-80,-68,-81,]),'DEF':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,20,-31,20,-32,-44,-82,-45,20,-66,-67,20,-43,-83,-63,-64,20,20,20,20,20,20,-62,-65,20,-69,-70,20,-80,-68,-81,]),'RET':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,21,-31,21,-32,-44,-82,-45,21,-66,-67,21,-43,-83,-63,-64,21,21,21,21,21,21,-62,-65,21,-69,-70,21,-80,-68,-81,]),'SUB':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,79,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,111,112,116,117,118,119,120,121,122,123,127,133,134,135,136,142,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,48,-28,-42,22,22,-41,22,22,22,22,-30,-37,-38,-39,-40,-56,22,-29,-34,-36,-35,-33,-1,22,22,22,22,22,22,22,22,22,22,-13,-14,-15,-16,-17,-18,22,22,22,22,22,22,48,-42,-28,22,48,48,48,-11,48,22,48,22,48,-61,-19,-20,-21,-22,-23,-24,48,48,48,-58,-59,48,-60,48,22,48,-41,-31,22,22,48,-32,22,-44,-82,-45,22,-66,-67,22,48,-43,-83,-63,-64,22,48,22,22,22,22,22,22,-62,-65,22,-69,-70,22,-80,-68,-81,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[23,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,23,23,-41,23,23,23,23,-30,-37,-38,-39,-40,-56,23,-29,-34,-36,-35,-33,-1,23,23,23,23,23,23,23,23,23,23,-13,-14,-15,-16,-17,-18,23,23,23,23,23,23,-42,-28,23,-71,-11,-12,23,23,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,23,-31,23,23,-32,23,-44,-82,-45,23,-66,-67,23,-43,-83,-63,-64,23,23,23,23,23,23,23,-62,-65,23,-69,-70,23,-80,-68,-81,]),'L_PAR':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,75,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,65,-42,16,71,16,-41,16,16,16,16,-30,-37,-38,-39,-40,-56,16,-29,-34,-36,-35,-33,85,-46,-47,-48,-49,-1,16,16,16,16,16,16,16,16,16,16,-13,-14,-15,-16,-17,-18,16,16,16,16,16,16,-42,65,16,109,-71,-11,-12,16,16,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,16,-31,16,16,-32,16,-44,-82,-45,16,-66,-67,16,-43,-83,-63,-64,16,16,16,16,16,16,16,-62,-65,16,-69,-70,16,-80,-68,-81,]),'IDEN':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,109,111,112,116,117,118,119,120,121,122,127,133,134,135,136,139,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[31,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,31,31,-41,31,31,31,31,31,31,-30,-37,-38,-39,-40,-56,31,-29,-34,-36,-35,-33,31,31,-1,31,31,31,31,31,31,31,31,31,31,-13,-14,-15,-16,-17,-18,31,31,31,31,31,31,-42,-28,31,-71,-11,-12,31,31,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,31,-31,31,31,31,-32,31,-44,-82,-45,31,-66,-67,31,-43,-83,-63,-64,31,31,31,31,31,31,31,31,-62,-65,31,-69,-70,31,-80,-68,-81,]),'L_BRACE':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,113,114,116,117,118,119,120,121,122,127,131,133,134,135,136,137,144,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[32,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,64,67,32,32,-41,32,32,32,32,-30,79,-38,-39,-40,-56,32,-29,-34,-36,-35,-33,-1,32,32,32,32,32,32,32,32,32,32,-13,-14,-15,-16,-17,-18,32,32,32,32,32,32,67,64,32,-71,-11,-12,32,32,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,32,-31,32,32,-32,32,131,131,-44,-82,-45,32,-66,-67,32,-43,131,-83,-63,-64,32,131,131,32,32,32,32,32,32,-62,-65,32,-69,-70,32,-80,-68,-81,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[34,34,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,34,34,-41,34,34,34,34,-30,-37,-38,-39,-40,-56,34,-29,-34,-36,-35,-33,-1,34,34,34,34,34,34,34,34,34,34,-13,-14,-15,-16,-17,-18,34,34,34,34,34,34,-42,-28,34,-71,-11,-12,34,34,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,34,-31,34,34,-32,34,-44,-82,-45,34,-66,-67,34,-43,-83,-63,-64,34,34,34,34,34,34,34,-62,-65,34,-69,-70,34,-80,-68,-81,]),'BOOL':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[35,35,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,35,35,-41,35,35,35,35,-30,-37,-38,-39,-40,-56,35,-29,-34,-36,-35,-33,-1,35,35,35,35,35,35,35,35,35,35,-13,-14,-15,-16,-17,-18,35,35,35,35,35,35,-42,-28,35,-71,-11,-12,35,35,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,35,-31,35,35,-32,35,-44,-82,-45,35,-66,-67,35,-43,-83,-63,-64,35,35,35,35,35,35,35,-62,-65,35,-69,-70,35,-80,-68,-81,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[36,36,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,36,36,-41,36,36,36,36,-30,-37,-38,-39,-40,-56,36,-29,-34,-36,-35,-33,-1,36,36,36,36,36,36,36,36,36,36,-13,-14,-15,-16,-17,-18,36,36,36,36,36,36,-42,-28,36,-71,-11,-12,36,36,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,36,-31,36,36,-32,36,-44,-82,-45,36,-66,-67,36,-43,-83,-63,-64,36,36,36,36,36,36,36,-62,-65,36,-69,-70,36,-80,-68,-81,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,116,117,118,119,120,121,122,127,133,134,135,136,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[37,37,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,37,37,-41,37,37,37,37,-30,-37,-38,-39,-40,-56,37,-29,-34,-36,-35,-33,-1,37,37,37,37,37,37,37,37,37,37,-13,-14,-15,-16,-17,-18,37,37,37,37,37,37,-42,-28,37,-71,-11,-12,37,37,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,37,-31,37,37,-32,37,-44,-82,-45,37,-66,-67,37,-43,-83,-63,-64,37,37,37,37,37,37,37,-62,-65,37,-69,-70,37,-80,-68,-81,]),'VAL':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[38,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,38,-31,38,-32,-44,-82,-45,38,-66,-67,38,-43,-83,-63,-64,38,38,38,38,38,38,-62,-65,38,-69,-70,38,-80,-68,-81,]),'VAR':([0,1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,111,116,117,118,119,120,121,122,127,133,134,135,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[39,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,39,-31,39,-32,-44,-82,-45,39,-66,-67,39,-43,-83,-63,-64,39,39,39,39,39,39,-62,-65,39,-69,-70,39,-80,-68,-81,]),'INT_TYPE':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,113,114,116,117,118,119,120,121,122,127,131,133,134,135,136,137,144,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[41,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,41,41,-41,41,41,41,41,-30,-37,-38,-39,-40,-56,41,-29,-34,-36,-35,-33,-1,41,41,41,41,41,41,41,41,41,41,-13,-14,-15,-16,-17,-18,41,41,41,41,41,41,-42,-28,41,-71,-11,-12,41,41,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,41,-31,41,41,-32,41,41,41,-44,-82,-45,41,-66,-67,41,-43,41,-83,-63,-64,41,41,41,41,41,41,41,41,41,-62,-65,41,-69,-70,41,-80,-68,-81,]),'FLOAT_TYPE':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,113,114,116,117,118,119,120,121,122,127,131,133,134,135,136,137,144,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[42,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,42,42,-41,42,42,42,42,-30,-37,-38,-39,-40,-56,42,-29,-34,-36,-35,-33,-1,42,42,42,42,42,42,42,42,42,42,-13,-14,-15,-16,-17,-18,42,42,42,42,42,42,-42,-28,42,-71,-11,-12,42,42,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,42,-31,42,42,-32,42,42,42,-44,-82,-45,42,-66,-67,42,-43,42,-83,-63,-64,42,42,42,42,42,42,42,42,42,-62,-65,42,-69,-70,42,-80,-68,-81,]),'BOOL_TYPE':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,113,114,116,117,118,119,120,121,122,127,131,133,134,135,136,137,144,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[43,43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,43,43,-41,43,43,43,43,-30,-37,-38,-39,-40,-56,43,-29,-34,-36,-35,-33,-1,43,43,43,43,43,43,43,43,43,43,-13,-14,-15,-16,-17,-18,43,43,43,43,43,43,-42,-28,43,-71,-11,-12,43,43,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,43,-31,43,43,-32,43,43,43,-44,-82,-45,43,-66,-67,43,-43,43,-83,-63,-64,43,43,43,43,43,43,43,43,43,-62,-65,43,-69,-70,43,-80,-68,-81,]),'STRING_TYPE':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,106,107,108,111,112,113,114,116,117,118,119,120,121,122,127,131,133,134,135,136,137,144,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,],[44,44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,44,44,-41,44,44,44,44,-30,-37,-38,-39,-40,-56,44,-29,-34,-36,-35,-33,-1,44,44,44,44,44,44,44,44,44,44,-13,-14,-15,-16,-17,-18,44,44,44,44,44,44,-42,-28,44,-71,-11,-12,44,44,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,44,-31,44,44,-32,44,44,44,-44,-82,-45,44,-66,-67,44,-43,44,-83,-63,-64,44,44,44,44,44,44,44,44,44,-62,-65,44,-69,-70,44,-80,-68,-81,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,106,111,116,117,118,120,121,127,133,134,135,155,156,161,163,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,-31,-32,-44,-82,-45,-66,-67,-43,-83,-63,-64,-62,-65,-80,-81,]),'R_SCOPE':([2,3,4,5,6,7,8,9,10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,45,69,70,76,77,78,86,87,88,89,90,91,92,93,94,95,96,97,98,101,106,111,116,117,118,119,120,121,122,127,133,134,135,151,152,155,156,157,158,159,160,161,162,163,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-1,-42,-28,-71,-11,-12,-57,-61,-19,-20,-21,-22,-23,-24,-25,-26,-27,-58,-59,-60,-31,-32,-44,-82,-45,134,-66,-67,135,-43,-83,-63,-64,155,156,-62,-65,161,-69,-70,163,-80,-68,-81,]),'ASSIGNMENT':([10,11,12,13,17,24,25,26,27,28,29,30,31,33,34,35,36,37,41,42,43,44,69,70,74,77,78,88,89,90,91,92,93,94,95,96,106,111,116,117,118,127,129,130,132,133,146,],[46,62,63,66,-41,-30,-37,-38,-39,-40,-54,-55,-56,-29,-34,-36,-35,-33,-46,-47,-48,-49,-42,-28,108,-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-31,-32,-44,-82,-45,-43,-53,-50,-52,-83,-51,]),'ADD':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[47,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,47,-42,-28,47,47,47,-11,47,47,47,-19,-20,-21,-22,-23,-24,47,47,47,47,47,47,-41,-31,47,-32,-44,-82,-45,47,-43,-83,47,]),'MUL':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[49,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,49,-42,-28,49,49,49,-11,49,49,49,49,49,-21,-22,-23,-24,49,49,49,49,49,49,-41,-31,49,-32,-44,-82,-45,49,-43,-83,49,]),'DIV':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[50,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,50,-42,-28,50,50,50,-11,50,50,50,50,50,-21,-22,-23,-24,50,50,50,50,50,50,-41,-31,50,-32,-44,-82,-45,50,-43,-83,50,]),'MOD':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[51,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,51,-42,-28,51,51,51,-11,51,51,51,51,51,-21,-22,-23,-24,51,51,51,51,51,51,-41,-31,51,-32,-44,-82,-45,51,-43,-83,51,]),'POW':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[52,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,52,-42,-28,52,52,52,-11,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-41,-31,52,-32,-44,-82,-45,52,-43,-83,52,]),'AND':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[53,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,53,-42,-28,53,53,53,-11,-12,53,53,-19,-20,-21,-22,-23,-24,-25,53,53,53,53,53,-41,-31,53,-32,-44,-82,-45,53,-43,-83,53,]),'OR':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[54,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,54,-42,-28,54,54,54,-11,-12,54,54,-19,-20,-21,-22,-23,-24,-25,-26,54,54,54,54,-41,-31,54,-32,-44,-82,-45,54,-43,-83,54,]),'LESS':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[56,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,56,-42,-28,56,56,56,-11,-12,56,56,-19,-20,-21,-22,-23,-24,-25,-26,56,56,56,56,-41,-31,56,-32,-44,-82,-45,56,-43,-83,56,]),'GREATER':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[57,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,57,-42,-28,57,57,57,-11,-12,57,57,-19,-20,-21,-22,-23,-24,-25,-26,57,57,57,57,-41,-31,57,-32,-44,-82,-45,57,-43,-83,57,]),'LESS_EQUAL':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[58,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,58,-42,-28,58,58,58,-11,-12,58,58,-19,-20,-21,-22,-23,-24,-25,-26,58,58,58,58,-41,-31,58,-32,-44,-82,-45,58,-43,-83,58,]),'GREATER_EQUAL':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[59,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,59,-42,-28,59,59,59,-11,-12,59,59,-19,-20,-21,-22,-23,-24,-25,-26,59,59,59,59,-41,-31,59,-32,-44,-82,-45,59,-43,-83,59,]),'EQUAL':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[60,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,60,-42,-28,60,60,60,-11,-12,60,60,-19,-20,-21,-22,-23,-24,-25,-26,60,60,60,60,-41,-31,60,-32,-44,-82,-45,60,-43,-83,60,]),'NOT_EQUAL':([10,12,13,17,24,25,26,27,28,31,33,34,35,36,37,68,69,70,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,105,106,110,111,116,117,118,123,127,133,142,],[61,-28,-42,-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,61,-42,-28,61,61,61,-11,-12,61,61,-19,-20,-21,-22,-23,-24,-25,-26,61,61,61,61,-41,-31,61,-32,-44,-82,-45,61,-43,-83,61,]),'L_SCOPE':([17,24,25,26,27,28,31,33,34,35,36,37,41,42,43,44,68,69,70,73,77,78,88,89,90,91,92,93,94,95,96,106,111,116,117,118,127,130,133,141,142,146,149,150,],[-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-46,-47,-48,-49,103,-42,-28,107,-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-31,-32,-44,-82,-45,-43,-50,-83,147,148,-51,153,154,]),'R_PAR':([17,24,25,26,27,28,31,33,34,35,36,37,41,42,43,44,65,69,70,72,77,78,81,82,85,88,89,90,91,92,93,94,95,96,100,104,105,106,109,111,112,115,116,117,118,125,126,127,128,130,133,143,145,146,],[-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-46,-47,-48,-49,-79,-42,-28,106,-11,-12,-77,-78,-79,-19,-20,-21,-22,-23,-24,-25,-26,-27,117,120,121,-31,-75,-32,-79,133,-44,-82,-45,138,-73,-43,-76,-50,-83,-74,-72,-51,]),'R_BRACE':([17,24,25,26,27,28,31,32,33,34,35,36,37,41,42,43,44,69,70,77,78,80,81,82,88,89,90,91,92,93,94,95,96,99,102,106,110,111,112,116,117,118,127,128,130,133,140,146,],[-41,-30,-37,-38,-39,-40,-56,-79,-29,-34,-36,-35,-33,-46,-47,-48,-49,-42,-28,-11,-12,111,-77,-78,-19,-20,-21,-22,-23,-24,-25,-26,-27,116,118,-31,127,-32,-79,-44,-82,-45,-43,-76,-50,-83,146,-51,]),'COMMA':([17,24,25,26,27,28,31,32,33,34,35,36,37,41,42,43,44,65,69,70,77,78,80,81,82,85,88,89,90,91,92,93,94,95,96,100,106,109,111,112,115,116,117,118,125,126,127,128,130,133,143,145,146,],[-41,-30,-37,-38,-39,-40,-56,-79,-29,-34,-36,-35,-33,-46,-47,-48,-49,-79,-42,-28,-11,-12,112,-77,-78,-79,-19,-20,-21,-22,-23,-24,-25,-26,-27,112,-31,-75,-32,-79,112,-44,-82,-45,139,-73,-43,-76,-50,-83,-74,-72,-51,]),'TO':([17,24,25,26,27,28,31,33,34,35,36,37,69,70,77,78,88,89,90,91,92,93,94,95,96,106,111,116,117,118,123,127,133,],[-41,-30,-37,-38,-39,-40,-56,-29,-34,-36,-35,-33,-42,-28,-11,-12,-19,-20,-21,-22,-23,-24,-25,-26,-27,-31,-32,-44,-82,-45,136,-43,-83,]),'COL':([31,83,84,124,138,],[-56,113,114,137,144,]),'ELSE':([134,],[141,]),'NONE_TYPE':([144,],[150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,103,107,147,148,],[1,119,122,151,152,]),'statement':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[2,45,2,2,45,45,2,2,45,45,159,159,159,159,]),'assignment':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'selection':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'print':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'while_loop':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'for_loop':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'func_definition':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'return_statement':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[10,10,68,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,86,86,99,82,86,102,104,110,82,10,10,123,82,10,10,142,10,10,10,10,10,10,10,10,]),'initialize':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'identifier':([0,1,14,16,18,19,20,21,22,23,32,38,39,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,109,112,119,122,136,139,147,148,151,152,153,154,157,160,],[12,12,70,70,70,74,75,70,70,70,70,83,84,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,12,12,70,124,70,12,12,70,124,12,12,12,12,12,12,12,12,]),'list_index':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[13,13,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,13,13,69,69,13,13,69,13,13,13,13,13,13,13,13,]),'string':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,105,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'iden_expression':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'list':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'int':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'bool':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'float':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'val_init':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'var_init':([0,1,103,107,119,122,147,148,151,152,153,154,157,160,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,119,122,136,147,148,151,152,153,154,157,160,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'base_type':([0,1,14,16,18,21,22,23,32,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,71,79,85,103,107,108,112,113,114,119,122,131,136,137,144,147,148,151,152,153,154,157,160,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,130,130,40,40,130,40,130,130,40,40,40,40,40,40,40,40,]),'relation':([10,68,72,73,76,77,78,82,86,88,89,90,91,92,93,94,95,96,99,102,104,110,123,142,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'argument_list':([32,65,85,],[80,100,115,]),'argument':([32,65,85,112,],[81,81,81,128,]),'assign':([46,62,63,66,],[87,97,98,101,]),'parameter_list':([109,],[125,]),'parameter':([109,139,],[126,145,]),'type':([113,114,131,137,144,],[129,132,140,143,149,]),'method_statements':([153,154,],[157,160,]),'method_body':([153,154,157,160,],[158,158,162,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',31),
  ('statements -> statement','statements',1,'p_statements_terminal','Parser.py',37),
  ('statement -> assignment','statement',1,'p_statement','Parser.py',43),
  ('statement -> selection','statement',1,'p_statement','Parser.py',44),
  ('statement -> print','statement',1,'p_statement','Parser.py',45),
  ('statement -> while_loop','statement',1,'p_statement','Parser.py',46),
  ('statement -> for_loop','statement',1,'p_statement','Parser.py',47),
  ('statement -> func_definition','statement',1,'p_statement','Parser.py',48),
  ('statement -> return_statement','statement',1,'p_statement','Parser.py',49),
  ('statement -> expression','statement',1,'p_statement','Parser.py',50),
  ('expression -> SUB expression','expression',2,'p_negative_number','Parser.py',55),
  ('expression -> NOT expression','expression',2,'p_negative_number','Parser.py',56),
  ('relation -> LESS','relation',1,'p_relations','Parser.py',61),
  ('relation -> GREATER','relation',1,'p_relations','Parser.py',62),
  ('relation -> LESS_EQUAL','relation',1,'p_relations','Parser.py',63),
  ('relation -> GREATER_EQUAL','relation',1,'p_relations','Parser.py',64),
  ('relation -> EQUAL','relation',1,'p_relations','Parser.py',65),
  ('relation -> NOT_EQUAL','relation',1,'p_relations','Parser.py',66),
  ('expression -> expression ADD expression','expression',3,'p_expression_math','Parser.py',71),
  ('expression -> expression SUB expression','expression',3,'p_expression_math','Parser.py',72),
  ('expression -> expression MUL expression','expression',3,'p_expression_math','Parser.py',73),
  ('expression -> expression DIV expression','expression',3,'p_expression_math','Parser.py',74),
  ('expression -> expression MOD expression','expression',3,'p_expression_math','Parser.py',75),
  ('expression -> expression POW expression','expression',3,'p_expression_math','Parser.py',76),
  ('expression -> expression AND expression','expression',3,'p_expression_math','Parser.py',77),
  ('expression -> expression OR expression','expression',3,'p_expression_math','Parser.py',78),
  ('expression -> expression relation expression','expression',3,'p_expression_math','Parser.py',79),
  ('iden_expression -> identifier','iden_expression',1,'p_iden_expression','Parser.py',84),
  ('iden_expression -> func_call','iden_expression',1,'p_iden_expression','Parser.py',85),
  ('expression -> iden_expression','expression',1,'p_variable','Parser.py',90),
  ('expression -> L_PAR expression R_PAR','expression',3,'p_expression_bracket','Parser.py',95),
  ('list -> L_BRACE argument_list R_BRACE','list',3,'p_list','Parser.py',100),
  ('string -> STRING','string',1,'p_string','Parser.py',105),
  ('int -> INT','int',1,'p_int','Parser.py',109),
  ('float -> FLOAT','float',1,'p_float','Parser.py',113),
  ('bool -> BOOL','bool',1,'p_bool','Parser.py',117),
  ('expression -> list','expression',1,'p_primary','Parser.py',121),
  ('expression -> int','expression',1,'p_primary','Parser.py',122),
  ('expression -> bool','expression',1,'p_primary','Parser.py',123),
  ('expression -> float','expression',1,'p_primary','Parser.py',124),
  ('expression -> string','expression',1,'p_primary','Parser.py',125),
  ('expression -> list_index','expression',1,'p_primary','Parser.py',126),
  ('list_index -> list L_BRACE expression R_BRACE','list_index',4,'p_list_index','Parser.py',130),
  ('list_index -> identifier L_BRACE expression R_BRACE','list_index',4,'p_list_index','Parser.py',131),
  ('list_index -> list_index L_BRACE expression R_BRACE','list_index',4,'p_list_index','Parser.py',132),
  ('base_type -> INT_TYPE','base_type',1,'p_base_type','Parser.py',139),
  ('base_type -> FLOAT_TYPE','base_type',1,'p_base_type','Parser.py',140),
  ('base_type -> BOOL_TYPE','base_type',1,'p_base_type','Parser.py',141),
  ('base_type -> STRING_TYPE','base_type',1,'p_base_type','Parser.py',142),
  ('type -> base_type','type',1,'p_type','Parser.py',148),
  ('type -> L_BRACE type R_BRACE','type',3,'p_list_type','Parser.py',154),
  ('var_init -> VAR identifier COL type','var_init',4,'p_var_initialize','Parser.py',160),
  ('val_init -> VAL identifier COL type','val_init',4,'p_val_initialize','Parser.py',166),
  ('initialize -> val_init','initialize',1,'p_init','Parser.py',172),
  ('initialize -> var_init','initialize',1,'p_init','Parser.py',173),
  ('identifier -> IDEN','identifier',1,'p_identifier','Parser.py',179),
  ('assign -> expression','assign',1,'p_assigned','Parser.py',186),
  ('assignment -> initialize ASSIGNMENT assign','assignment',3,'p_init_assign','Parser.py',192),
  ('assignment -> identifier ASSIGNMENT assign','assignment',3,'p_assign','Parser.py',199),
  ('assignment -> list_index ASSIGNMENT assign','assignment',3,'p_assign','Parser.py',200),
  ('assignment -> expression ASSIGNMENT assign','assignment',3,'p_assign','Parser.py',201),
  ('selection -> IF expression L_SCOPE statements R_SCOPE ELSE L_SCOPE statements R_SCOPE','selection',9,'p_else_selection','Parser.py',209),
  ('selection -> IF expression L_SCOPE statements R_SCOPE','selection',5,'p_selection','Parser.py',215),
  ('while_loop -> WHILE expression L_SCOPE statements R_SCOPE','while_loop',5,'p_while_loop','Parser.py',221),
  ('for_loop -> FOR identifier ASSIGNMENT expression TO expression L_SCOPE statements R_SCOPE','for_loop',9,'p_for_loop','Parser.py',227),
  ('print -> PRINT L_PAR expression R_PAR','print',4,'p_print','Parser.py',234),
  ('print -> PRINT L_PAR string R_PAR','print',4,'p_print','Parser.py',235),
  ('method_statements -> method_statements method_body','method_statements',2,'p_method_statements','Parser.py',242),
  ('method_statements -> method_body','method_statements',1,'p_method_statement','Parser.py',248),
  ('method_body -> statement','method_body',1,'p_body','Parser.py',254),
  ('return_statement -> RET expression','return_statement',2,'p_return_statement','Parser.py',260),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','Parser.py',265),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list_terminal','Parser.py',269),
  ('parameter -> identifier COL type','parameter',3,'p_parameter','Parser.py',274),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',279),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list','Parser.py',284),
  ('argument_list -> argument','argument_list',1,'p_argument_list_terminal','Parser.py',289),
  ('argument -> expression','argument',1,'p_argument','Parser.py',294),
  ('argument -> <empty>','argument',0,'p_argument_list_empty','Parser.py',299),
  ('func_definition -> DEF identifier L_PAR parameter_list R_PAR COL type L_SCOPE method_statements R_SCOPE','func_definition',10,'p_function_definition','Parser.py',305),
  ('func_definition -> DEF identifier L_PAR parameter_list R_PAR COL NONE_TYPE L_SCOPE method_statements R_SCOPE','func_definition',10,'p_function_definition','Parser.py',306),
  ('func_call -> identifier L_PAR argument_list R_PAR','func_call',4,'p_function_call','Parser.py',312),
  ('func_call -> base_type L_PAR argument_list R_PAR','func_call',4,'p_function_cast_call','Parser.py',317),
]
